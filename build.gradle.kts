/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    java

    // Apply the application plugin to add support for building a CLI application.
    application
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation("com.google.guava:guava:29.0-jre")

    // Use JUnit test framework
    testImplementation("junit:junit:4.13")
}

application {
    // Define the main class for the application.
    mainClassName = "com.lucien.client.App"
}

defaultTasks("run1","clean1")

tasks.register("run1"){
    doLast{
        println("default run1 task")
    }
}

tasks.register("clean1"){
    doLast{
        println("default clean1 task")
    }
}

tasks.register("name") {
    dependsOn("count")
    doLast {
        println("name test")
    }
}


tasks.register("count") {
    doLast {
        repeat(4) {
            println("$it")
        }
    }
}

repeat(4){ it->
    tasks.register("task$it"){
        doLast{
            println("$it")
        }
    }
}

tasks.named("task0"){ dependsOn("task1","task2","task3") }

val hello by tasks.registering{
    doLast{
        println("hello")
    }
}

hello.configure {
    doLast {
        println("hello 1")
    }
}

tasks.named("hello"){
    dependsOn("task0")
}

tasks.register("myProperties"){
    extra["name"]="zhouhao58"
}

tasks.register("printProps"){
    doLast{
        println(tasks["myProperties"].extra["name"])
    }
}

tasks.register<Copy>("myCopy"){
    from("src")
    into("des")
    include("**/*.java")
}

tasks.named("myCopy"){
	description = "my copy task to copy files from src"
    dependsOn("hello")
    doFirst{
        println("begin copy")
    }
    doLast{
        println("end copy")
    }
}

tasks.register("testPhase"){
    println("this is executed in configuration phase!")
    doFirst{
        println("this is first executed action in testPhase testPhaseTask")
    }

    doLast{
        println("this is last executed action in testPhase testPhaseTask")
    }
}

tasks.register("test2"){
    doLast{
        println()
    }
}

gradle.taskGraph.whenReady{
    println("gradle ready")
}

println("root build.gradle file this is executed in configuration phase ")